dnl -*- Mode: Autoconf; tab-width: 4; indent-tabs-mode: nil; -*-
dnl 
dnl CONFIGURE.IN - Autoconf macros to generate configure
dnl  Based on NSPR's configure.in
dnl
dnl $OpenPave$

dnl ***** BEGIN LICENSE BLOCK *****
dnl Version: MPL 1.1/GPL 2.0/LGPL 2.1
dnl
dnl The contents of this file are subject to the Mozilla Public License Version
dnl 1.1 (the "License"); you may not use this file except in compliance with
dnl the License. You may obtain a copy of the License at
dnl http://www.mozilla.org/MPL/
dnl
dnl Software distributed under the License is distributed on an "AS IS" basis,
dnl WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
dnl for the specific language governing rights and limitations under the
dnl License.
dnl
dnl The Original Code is the Netscape Portable Runtime (NSPR).
dnl
dnl The Initial Developer of the Original Code is
dnl Netscape Communications Corporation.
dnl Portions created by the Initial Developer are Copyright (C) 1998
dnl the Initial Developer. All Rights Reserved.
dnl
dnl Contributor(s):
dnl   Christopher Seawood <cls@seawood.org>
dnl   Howard Chu <hyc@symas.com>
dnl   Mark Mentovai <mark@moxienet.com>
dnl
dnl Alternatively, the contents of this file may be used under the terms of
dnl either the GNU General Public License Version 2 or later (the "GPL"), or
dnl the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
dnl in which case the provisions of the GPL or the LGPL are applicable instead
dnl of those above. If you wish to allow use of your version of this file only
dnl under the terms of either the GPL or the LGPL, and not to allow others to
dnl use your version of this file under the terms of the MPL, indicate your
dnl decision by deleting the provisions above and replace them with the notice
dnl and other provisions required by the GPL or the LGPL. If you do not delete
dnl the provisions above, a recipient may use your version of this file under
dnl the terms of any one of the MPL, the GPL or the LGPL.
dnl
dnl ***** END LICENSE BLOCK *****

AC_PREREQ(2.13)
AC_INIT(openpave.mk)
AC_CONFIG_AUX_DIR(${srcdir}/build)
AC_CANONICAL_SYSTEM

dnl ========================================================
dnl = Version for libraries
dnl ========================================================
OP_VERSION_MAJOR=1
OP_VERSION_MINOR=0
OP_VERSION_MICRO=0

dnl ===========================================================================
dnl check compiler flags
AC_DEFUN([CC_TRY_FLAG], [
  AC_MSG_CHECKING([whether $CC supports $1])
  _SAVE_CFLAGS=$CFLAGS
  CFLAGS="$CFLAGS $1"
  AC_LANG_SAVE
  AC_LANG_C
  AC_TRY_COMPILE( [ #include <stdio.h> ],
    [printf("Hello World\n");],
    [cc_flag="yes"],
    [cc_flag="no"] )
  AC_LANG_RESTORE
  CFLAGS=$_SAVE_CFLAGS
  if test "x$cc_flag" = "xyes"; then
    ifelse([$2], , :, [$2])
  else
    ifelse([$3], , :, [$3])
  fi
  AC_MSG_RESULT([$cc_flag])
])

dnl ===========================================================================
dnl check compiler flags
AC_DEFUN([CXX_TRY_FLAG], [
  AC_MSG_CHECKING([whether $CXX supports $1])
  _SAVE_CXXFLAGS=$CXXFLAGS
  CXXFLAGS="$CXXFLAGS $1"
  AC_LANG_SAVE
  AC_LANG_CPLUSPLUS
  AC_TRY_COMPILE( [ #include <stdio.h> ],
    [printf("Hello World\n");],
    [cc_flag="yes"],
    [cc_flag="no"] )
  AC_LANG_RESTORE
  CXXFLAGS=$_SAVE_CXXFLAGS
  if test "x$cc_flag" = "xyes"; then
    ifelse([$2], , :, [$2])
  else
    ifelse([$3], , :, [$3])
  fi
  AC_MSG_RESULT([$cc_flag])
])

dnl ========================================================
dnl = Defaults
dnl ========================================================
_OPTIMIZE_FLAGS=-O
_DEBUG_FLAGS=-g
_CONFIG_H="-include config.h"
OP_DEBUG=1
OP_OPTIMIZE=
DEFINES=
VISIBILITY=

dnl Link in libraries necessary to resolve all symbols for shared libs
RESOLVE_SYMS=

CFLAGS="${CFLAGS=}"
CXXFLAGS="${CXXFLAGS=}"
LDFLAGS="${LDFLAGS=}"
WARN_CFLAGS=""
WARN_CXXFLAGS=""

_WIN32_MSVC=
case "$host" in
*-cygwin*|*-mingw*)
    # Check to see if we are really running in a msvc environemnt
    AC_CHECK_PROGS(CC, cl.exe)
    if test "$CC" = "cl.exe"; then
        echo 'main() { return 0; }' > dummy.c
        ${CC} -o dummy dummy.c >/dev/null 2>&1
        if test $? = 0; then
            _WIN32_MSVC=1
        else
            AC_MSG_WARN([$(CC) test failed.  Using normal feature tests])
        fi
        rm -f dummy dummy.o dummy.obj dummy.exe dummy.c
    fi
    ;;
*-msvc*)
    _WIN32_MSVC=1
    ;;
*-mks*)
    _WIN32_MSVC=1
    ;;
esac

AC_ARG_ENABLE(optimize,
    [  --disable-optimize      Do not perform code optimizations
  --enable-optimize(=val) Enable code optimizations (val, ie. -O2) ],
    [ if test "$enableval" != "no"; then
        OP_OPTIMIZE=1
        if test -n "$enableval" && test "$enableval" != "yes"; then
            _OPTIMIZE_FLAGS=`echo $enableval | sed -e 's|\\\ | |g'`
            _SAVE_OPTIMIZE_FLAGS=$_OPTIMIZE_FLAGS
        fi
      else
        OP_OPTIMIZE=
    fi ])

AC_ARG_ENABLE(debug,
    [  --disable-debug         Do not compile in debugging symbols
  --enable-debug(=val)    Enable debugging (debug flags val)],
    [   if test "$enableval" = "no"; then
            OP_DEBUG=
        else
            OP_DEBUG=1
            if test -n "$enableval" && test "$enableval" != "yes"; then
                _DEBUG_FLAGS=`echo $enableval | sed -e 's|\\\ | |g'`
                _SAVE_DEBUG_FLAGS=$_DEBUG_FLAGS
            fi
        fi])

AC_ARG_ENABLE(debug-rtl,
    [  --enable-debug-rtl      Use the MSVC debug runtime library],
    [ if test "$enableval" = "yes"; then
        USE_DEBUG_RTL=1
      fi ])

if test -z "$_WIN32_MSVC"; then
    AC_PROG_INSTALL(install,,)
    AC_PATH_PROG(WHOAMI, $WHOAMI whoami, :)
fi

if test -n "$OP_DEBUG"; then
    _DEBUG_DEFINES="-DDEBUG -UNDEBUG"

    if test -n "$OP_CVS_USER"; then
        _DEBUG_DEFINES="$_DEBUG_DEFINES -DDEBUG_$OP_CVS_USER"
    else
        case "${target_os}" in
        msvc*|mks*|cygwin*|mingw*)
            ;;
        *)
            _DEBUG_DEFINES="$_DEBUG_DEFINES -DDEBUG_`$WHOAMI`"
            ;;
        esac
    fi
else
    _DEBUG_DEFINES="-DNDEBUG -UDEBUG"
fi

if test -z "$_WIN32_MSVC"; then
dnl ========================================================
dnl Checks for compilers.
dnl ========================================================
AC_PROG_CC
AC_PROG_CXX
AC_PROG_CPP
AC_PROG_RANLIB
AC_PATH_PROGS(AS, as, $CC)
AC_PATH_PROGS(AR, ar, :)
AC_PATH_PROGS(STRIP, strip, :)

if test "$GCC" = "yes"; then
    GNU_CC=1
fi
if test "$GXX" = "yes"; then
    GNU_CXX=1
fi
if test "`echo | $AS -v 2>&1 | grep -c GNU`" != "0"; then
    GNU_AS=1
fi
rm -f a.out

dnl ========================================================
dnl Check for gcc -pipe support
dnl ========================================================
AC_MSG_CHECKING([for gcc -pipe support])
if test -n "$GNU_CC" && test -n "$GNU_CXX" && test -n "$GNU_AS"; then
    echo '#include <stdio.h>' > dummy-hello.c
    echo 'int main() { printf("Hello World\n"); return 0; }' >> dummy-hello.c
    ${CC} -S dummy-hello.c -o dummy-hello.s 2>&5
    cat dummy-hello.s | ${AS} -o dummy-hello.S - 2>&5
    if test $? = 0; then
        _res_as_stdin="yes"
    else
        _res_as_stdin="no"
    fi
    if test "$_res_as_stdin" = "yes"; then
        _SAVE_CFLAGS=$CFLAGS
        CFLAGS="$CFLAGS -pipe"
        AC_TRY_COMPILE( [ #include <stdio.h> ],
            [printf("Hello World\n");],
            [_res_gcc_pipe="yes"],
            [_res_gcc_pipe="no"] )
        CFLAGS=$_SAVE_CFLAGS
    fi
    if test "$_res_as_stdin" = "yes" && test "$_res_gcc_pipe" = "yes"; then
        _res="yes";
        CFLAGS="$CFLAGS -pipe"
        CXXFLAGS="$CXXFLAGS -pipe"
    else
        _res="no"
    fi
    rm -f dummy-hello.c dummy-hello.s dummy-hello.S dummy-hello a.out
    AC_MSG_RESULT([$_res])
else
    AC_MSG_RESULT([no])
fi

dnl ===============================================================
dnl Check for .hidden assembler directive and visibility attribute.
dnl Borrowed from glibc configure.in
dnl ===============================================================
if test "$GNU_CC"; then
    AC_CACHE_CHECK(for visibility(hidden) attribute,
        ac_cv_visibility_hidden,
        [cat > conftest.c <<EOF
        int foo __attribute__ ((visibility ("hidden"))) = 1;
EOF
        ac_cv_visibility_hidden=no
        if ${CC-cc} -Werror -S conftest.c -o conftest.s >/dev/null 2>&1; then
            if grep '\.hidden.*foo' conftest.s >/dev/null; then
                ac_cv_visibility_hidden=yes
            fi
        fi
        rm -f conftest.[cs]
        ])
    if test "$ac_cv_visibility_hidden" = "yes"; then
        VISIBILITY=1
    fi

dnl ===============================================================
dnl Use lots of warning flags with with gcc and compatible compilers
dnl ===============================================================
dnl Some warning options are not supported by all versions of
dnl gcc, so test all desired options against the current
dnl compiler.  Borrowed from Cairo's configure.in.
dnl
dnl There are some order dependencies here. Specifically, an option that
dnl disables a warning will have no net effect if a later option then
dnl enables that warnings, (perhaps implicitly). So we put some grouped
dnl options (-Wall and -Wextra) up front and the -Wno options last.
dnl
dnl Note: if you change the following variable, the cache is automatically
dnl skipped and all flags rechecked.  So there's no need to do anything
dnl else.  If for any reason you need to force a recheck, just change
dnl MAYBE_WARN in an ignorable way (like adding whitespace)

MAYBE_WARN="-Wall -Wextra \
-Wconversion \
-Winit-self \
-Wmissing-format-attribute \
-Wpacked \
-Wpointer-arith \
-Wshadow \
-Wsign-compare \
-Wstrict-aliasing=2 \
-Wswitch-enum \
-Wunsafe-loop-optimizations \
-Wwrite-strings \
-Wno-attributes \
-Wno-missing-field-initializers \
-Wno-unused-parameter \
"

MAYBE_WARN_C="$MAYBE_WARN \
-Wdeclaration-after-statement \
-Werror-implicit-function-declaration \
-Wmissing-declarations \
-Wmissing-prototypes \
-Wnested-externs \
-Wold-style-definition \
-Wstrict-prototypes \
-Wtraditional \
-Wunsafe-loop-optimizations \
-Wwrite-strings \
"

MAYBE_WARN_CXX="$MAYBE_WARN \
-Wabi \
-Wctor-dtor-privacy \
-Wold-style-cast \
-Woverloaded-virtual \
-Wsign-promo \
-Wnon-template-friend \
"

# invalidate cached value if MAYBE_WARN has changed
if test "x$ac_cv_warn_maybe_c" != "x$MAYBE_WARN_C"; then
  unset ac_cv_warn_cflags
fi
AC_CACHE_CHECK([for supported warning flags], ac_cv_warn_cflags, [
  echo
  WARN_CFLAGS=""
  for W in $MAYBE_WARN_C; do
    CC_TRY_FLAG([$W], [WARN_CFLAGS="$WARN_CFLAGS $W"])
  done
  ac_cv_warn_cflags=$WARN_CFLAGS
  ac_cv_warn_maybe_c=$MAYBE_WARN_C
  AC_MSG_CHECKING([which warning flags were supported])
])
if test "x$ac_cv_warn_maybe_cxx" != "x$MAYBE_WARN_CXX"; then
  unset ac_cv_warn_cxxflags
fi
AC_CACHE_CHECK([for supported warning flags], ac_cv_warn_cxxflags, [
  echo
  WARN_CXXFLAGS=""
  for W in $MAYBE_WARN_CXX; do
    CXX_TRY_FLAG([$W], [WARN_CXXFLAGS="$WARN_CXXFLAGS $W"])
  done
  ac_cv_warn_cxxflags=$WARN_CXXFLAGS
  ac_cv_warn_maybe_cxx=$MAYBE_WARN_CXX
  AC_MSG_CHECKING([which warning flags were supported])
])
WARN_CFLAGS="$ac_cv_warn_cflags"
WARN_CXXFLAGS="$ac_cv_warn_cxxflags"

fi # GNU_CC

fi # WIN32_MSVC

dnl ========================================================
dnl Default platform specific options
dnl ========================================================
ASM_SUFFIX=s
OBJ_SUFFIX=o
LIB_SUFFIX=a
DLL_SUFFIX=so
EXE_SUFFIX=
ARFLAGS='cr $@'
ASFLAGS='$(CFLAGS)'

dnl ========================================================
dnl Override of system specific target options
dnl ========================================================
case "$target" in
*-darwin*)
    CPPFLAGS="$CPPFLAGS -Wmost -fno-common -no-cpp-precomp"
    DEFINES="$DEFINES XP_UNIX DARWIN"
    DSO_CFLAGS=-fPIC
    DSO_LDFLAGS='-dynamiclib -compatibility_version 1 -current_version 1 -all_load -install_name @executable_path/$@ -headerpad_max_install_names'
    STRIP="$STRIP -x -S"
    DLL_SUFFIX=dylib
    ;;

*-freebsd*)
    DEFINES="$DEFINES XP_UNIX"
    CPPFLAGS="$CPPFLAGS -ansi"
    DSO_CFLAGS=-fPIC
    DSO_LDFLAGS='-shared -Wl,-soname -Wl,$(notdir $@)'
    _OPTIMIZE_FLAGS=-O2
    _DEBUG_FLAGS="-g -fno-inline"
    ;;

*-linux*|*-gnu*|*-k*bsd*-gnu)
    DEFINES="$DEFINES XP_UNIX"
    DSO_CFLAGS=-fPIC
    DSO_LDFLAGS='-shared -Wl,-soname -Wl,$(notdir $@)'
    _OPTIMIZE_FLAGS=-O2
    _DEBUG_FLAGS="-g -fno-inline"
    case "${target_cpu}" in
    x86_64)
        CC="$CC -m32"
        CXX="$CXX -m32"
        ;;
    esac    
    ;;

*-mingw*|*-cygwin*|*-msvc*|*-mks*)
    DEFINES="$DEFINES XP_PC"
    RESOLVE_SYMS=1
    DLL_SUFFIX=dll
    EXE_SUFFIX=.exe

    if test -n "$GNU_CC"; then
        CC="$CC -mno-cygwin"
        CXX="$CXX -mno-cygwin"
	CPPFLAGS="$CPPFLAGS -I/usr/include"
        DSO_LDFLAGS='-shared -Wl,--export-all-symbols -Wl,--out-implib -Wl,$(IMPORT_LIBRARY)'
        AC_PATH_PROGS(RC, windres, :)
        RCFLAGS='-O coff --use-temp-file'
    else
        # Determine compiler version
        CC_VERSION=`"${CC}" -v 2>&1 | grep Version | sed -e 's|.* Version ||' -e 's| .*||'`
        _CC_MAJOR_VERSION=`echo $CC_VERSION | awk -F\. '{ print $1 }'`
        _CC_MINOR_VERSION=`echo $CC_VERSION | awk -F\. '{ print $2 }'`
        MSC_VER=${_CC_MAJOR_VERSION}${_CC_MINOR_VERSION}
        if test "$_CC_MAJOR_VERSION" = "14"; then
            CXXFLAGS="$CXXFLAGS -Zc:wchar_t-"
            DEFINES="$DEFINES _CRT_SECURE_NO_DEPRECATE"
            DEFINES="$DEFINES _CRT_NONSTDC_NO_DEPRECATE"
        elif test "$_CC_MAJOR_VERSION" = "15"; then
            CXXFLAGS="$CXXFLAGS -Zc:wchar_t-"
            DEFINES="$DEFINES _CRT_SECURE_NO_WARNINGS"
            DEFINES="$DEFINES _CRT_NONSTDC_NO_WARNINGS"
        fi
        CC="$CC -nologo"
        CXX=$CC
        CPP="$CC -E"
        RC="rc.exe -nologo"
        LD="link.exe -nologo"
        AR="lib.exe -nologo"
        ARFLAGS=
        RANLIB=
        STRIP=
        ASM_SUFFIX=asm
        OBJ_SUFFIX=obj
        LIB_SUFFIX=lib
        CPPFLAGS="$CPPFLAGS -W3 -GF -Gy"
        _DEBUG_FLAGS=-Z7
        _OPTIMIZE_FLAGS=-O2
	_CONFIG_H="-FIconfig.h"

        if test -z "$OP_OPTIMIZE"; then
            CPPFLAGS="$CPPFLAGS -Od"
        fi
        if test -n "$USE_DEBUG_RTL"; then
            CPPFLAGS="$CPPFLAGS -MDd"
        else
            CPPFLAGS="$CPPFLAGS -MD"
        fi
        if test -n "$OP_DEBUG"; then
            _DEBUG_DEFINES="$_DEBUG_DEFINES -D_DEBUG"
            DSO_LDFLAGS="$DSO_LDFLAGS -DEBUG"
            LDFLAGS="$LDFLAGS -DEBUG"
        else
            _DEBUG_DEFINES="$_DEBUG_DEFINES -U_DEBUG"
        fi
        if test -n "$OP_OPTIMIZE"; then
            if test -n "$OP_PROFILE"; then
                _OPTIMIZE_FLAGS="$_OPTIMIZE_FLAGS -Z7"
            fi
            if test -n "$OP_DEBUG_SYMBOLS"; then
                _OPTIMIZE_FLAGS="$_OPTIMIZE_FLAGS -Zi"
            fi
            if test -n "$OP_PROFILE" -o -n "$OP_DEBUG_SYMBOLS"; then
                DSO_LDFLAGS="$DSO_LDFLAGS -DEBUG -OPT:REF"
                LDFLAGS="$LDFLAGS -DEBUG -OPT:REF"
            fi
        fi
        DSO_LDFLAGS="$DSO_LDFLAGS -DLL -SUBSYSTEM:WINDOWS"
        if test "$MSC_VER" -le "1200" -a -z "$OP_DEBUG_SYMBOLS"; then
            DSO_LDFLAGS="$DSO_LDFLAGS -PDB:NONE"
        fi
    fi # GNU_CC
    ;;
*)
    DEFINES="$DEFINES XP_UNIX"
    ;;
esac

if test -z "$_WIN32_MSVC"; then
dnl ========================================================
dnl Checks for library functions.
dnl ========================================================
AC_SEARCH_LIBS(sqrt,m,OS_LIBS="-lm")
fi

dnl If the user passed in arg to --enable-optimize or --enable-debug,
dnl make sure that we use it.
if test -n "$_SAVE_OPTIMIZE_FLAGS"; then
    _OPTIMIZE_FLAGS="$_SAVE_OPTIMIZE_FLAGS"
fi

if test -n "$_SAVE_DEBUG_FLAGS"; then
    _DEBUG_FLAGS="$_SAVE_DEBUG_FLAGS"
fi

if test -n "$OP_OPTIMIZE"; then
    CFLAGS="$CFLAGS $_OPTIMIZE_FLAGS"
    CXXFLAGS="$CXXFLAGS $_OPTIMIZE_FLAGS"
fi

if test -n "$OP_DEBUG"; then
    CFLAGS="$CFLAGS $_DEBUG_FLAGS"
    CXXFLAGS="$CXXFLAGS $_DEBUG_FLAGS"
fi

CFLAGS="$CFLAGS $WARN_CFLAGS"
CXXFLAGS="$CXXFLAGS $WARN_CXXFLAGS"
CPPFLAGS="$_CONFIG_H $CPPFLAGS $_DEBUG_DEFINES"

dnl ========================================================
dnl Substitution of found variables.
dnl ========================================================
AC_SUBST(CC)
AC_SUBST(CXX)
AC_SUBST(CPP)
AC_SUBST(CFLAGS)
AC_SUBST(CXXFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(GNU_CC)
AC_SUBST(MSC_VER)
AC_SUBST(AR)
AC_SUBST(ARFLAGS)
AC_SUBST(AS)
AC_SUBST(ASFLAGS)
AC_SUBST(LD)
AC_SUBST(RANLIB)
AC_SUBST(STRIP)
AC_SUBST(DSO_CFLAGS)
AC_SUBST(DSO_LDFLAGS)

AC_SUBST(OS_LIBS)
AC_SUBST(RESOLVE_SYMS)

AC_SUBST(RC)
AC_SUBST(RCFLAGS)

AC_SUBST(OP_OPTIMIZE)

AC_SUBST(OP_VERSION_MAJOR)
AC_SUBST(OP_VERSION_MINOR)
AC_SUBST(OP_VERSION_MICRO)

AC_SUBST(ASM_SUFFIX)
AC_SUBST(OBJ_SUFFIX)
AC_SUBST(LIB_SUFFIX)
AC_SUBST(DLL_SUFFIX)
AC_SUBST(EXE_SUFFIX)

for p in $OP_PROJECTS; do
    eval "OP_PROJECT_${p}=1";
done;

AC_SUBST(OP_PROJECTS)

dnl ========================================================
dnl Generate output files.
dnl ========================================================

if test -z "$OP_PROJECT_core"; then
    AC_ERROR([The core project must be built!])
fi
MAKEFILES="
build/autoconf.mk
Makefile
include/Makefile
src/Makefile
"

if test -n "$OP_PROJECT_test"; then
    MAKEFILES="$MAKEFILES test/Makefile"
fi

AC_MSG_CHECKING([if config.h needs rebuilding])
AC_OUTPUT_COMMANDS([
  configfile=include/config.h
  outfile=$configfile.tmp
  cat > $outfile <<_EOF
/* Generated by configure.  Do not edit */
#ifndef __CONFIG_H
#define __CONFIG_H

#ifdef  __cplusplus
# define BEGIN_C_DECLS  extern "C" {
# define END_C_DECLS    }
#else
# define BEGIN_C_DECLS
# define END_C_DECLS
#endif

#define OP_VERSION_MAJOR $OP_VERSION_MAJOR
#define OP_VERSION_MINOR $OP_VERSION_MINOR
#define OP_VERSION_MICRO $OP_VERSION_MICRO

#define OP_VERSION_STRING "$OP_VERSION_MAJOR.$OP_VERSION_MINOR.$OP_VERSION_MICRO"

#define OP_VERSION_ENCODE(major, minor, micro) (((major)*10000)+((minor)*100)+(micro))

#define OP_VERSION OP_VERSION_ENCODE(OP_VERSION_MAJOR,OP_VERSION_MINOR,OP_VERSION_MICRO)

#define BUILD

_EOF
  for D in $OP_DEFINES; do
    echo "#define $D" >> $outfile
  done
  if test -n "$VISIBILITY"; then
    echo "#define GCC_VISIBILITY" >> $outfile
  fi
  cat >> $outfile <<_EOF

#if !defined(__GNUC__)
#define __attribute__(x)
#endif

#define OP_PRINTF(n,m)	__attribute__ ((__format__(__printf__,n,m)))

#if defined(WIN32) || defined(_MSC_VER) || defined(__CYGWIN__)
#ifdef BUILD_DLL
#define OP_EXPORT 	__declspec(dllexport)
#else
#define OP_EXPORT	__declspec(dllimport)
#endif
#define OP_HIDDEN
#else
#if defined(GCC_VISIBILITY) && !defined(__sun)
#define OP_EXPORT	__attribute__ ((visibility("default")))
#define OP_HIDDEN	__attribute__ ((visibility("hidden")))
#elif defined(__SUNPRO_C) && (__SUNPRO_C >= 0x550)
#define OP_EXPORT
#define OP_HIDDEN	__hidden
#else
#define OP_EXPORT
#define OP_HIDDEN
#endif
#endif

#endif // CONFIG_H
_EOF
  if cmp -s $outfile $configfile; then
    rm -f $outfile
  else
    mv $outfile $configfile
  fi
],[
  OP_DEFINES='$DEFINES'
  OP_VERSION_MAJOR=$OP_VERSION_MAJOR
  OP_VERSION_MINOR=$OP_VERSION_MINOR
  OP_VERSION_MICRO=$OP_VERSION_MICRO
  VISIBILITY=$VISIBILITY
])
AC_MSG_RESULT([done])

AC_OUTPUT([$MAKEFILES])
